{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Intro","level":2,"type":"heading","text":"Intro"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":" allows you to process any type of packet (whether variable or fixed length, binary, or string) by writing simple definitions for your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/Packet"},{"type":"text","text":"s."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":" is able to aid you in handling any packet type when reading chunked data, e.g. from a very large file to be more memory efficient or from a network socket where there may be latency between chunks."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/packetprocessor"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor","interfaceLanguage":"swift"},"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":" takes care of buffer management when processing packetized data within streams."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"PacketProcessor","title":"PacketProcessor","symbolKind":"module","role":"collection","modules":[{"name":"PacketProcessor"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/GettingStarted","doc:\/\/PacketProcessor\/tutorials\/Tutorial-TOC"]},{"title":"Initializing a Packet Processor","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketProcessor"]},{"title":"Defining & Handling Packets","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/DataPacket","doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/StringPacket","doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketHandlerContext"]},{"title":"Internals","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/AnyPacket","doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/Packet","doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketCollectionType"]},{"title":"Structures","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketSearchResult"]},{"title":"Type Aliases","identifiers":["doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketHandlerIdentifier"]}],"references":{"doc://PacketProcessor/documentation/PacketProcessor/GettingStarted":{"role":"article","title":"Getting Started with PacketProcessor","abstract":[{"type":"text","text":"Easily handle packetized data-streams."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/packetprocessor\/gettingstarted"},"doc://PacketProcessor/documentation/PacketProcessor":{"role":"collection","title":"PacketProcessor","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":" takes care of buffer management when processing packetized data within streams."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor","kind":"symbol","type":"topic","url":"\/documentation\/packetprocessor"},"doc://PacketProcessor/documentation/PacketProcessor/Packet":{"role":"symbol","title":"Packet","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Packet"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"Packet"},{"type":"text","text":" type that allows the choice between different "},{"type":"codeVoice","code":"CollectionType"},{"type":"text","text":"s (either "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" or "},{"type":"codeVoice","code":"String"},{"type":"text","text":")"}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/Packet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Packet"}],"url":"\/documentation\/packetprocessor\/packet"},"doc://PacketProcessor/documentation/PacketProcessor/DataPacket":{"role":"symbol","title":"DataPacket","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataPacket"}],"abstract":[{"type":"text","text":"Byte-oriented packets should conform to "},{"type":"codeVoice","code":"DataPacket"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Examples of this include IP, TCP, and UDP."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/DataPacket","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataPacket"}],"url":"\/documentation\/packetprocessor\/datapacket"},"doc://PacketProcessor/documentation/PacketProcessor/PacketSearchResult":{"role":"symbol","title":"PacketSearchResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PacketSearchResult"}],"abstract":[],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketSearchResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PacketSearchResult"}],"url":"\/documentation\/packetprocessor\/packetsearchresult"},"doc://PacketProcessor/documentation/PacketProcessor/PacketCollectionType":{"role":"symbol","title":"PacketCollectionType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PacketCollectionType"}],"abstract":[{"type":"text","text":"Protocol used to declare data collection types that can be used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":"."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketCollectionType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PacketCollectionType"}],"url":"\/documentation\/packetprocessor\/packetcollectiontype"},"doc://PacketProcessor/documentation/PacketProcessor/Packet/findFirstPacket(context:data:)":{"role":"symbol","title":"findFirstPacket(context:data:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findFirstPacket"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PacketHandlerContext","preciseIdentifier":"s:15PacketProcessor0A14HandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CollectionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PacketSearchResult","preciseIdentifier":"s:15PacketProcessor0A12SearchResultV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">?"}],"abstract":[{"type":"text","text":"Implement this method to find the first occurance of a valid packet within the data supplied."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/Packet\/findFirstPacket(context:data:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/packetprocessor\/packet\/findfirstpacket(context:data:)"},"doc://PacketProcessor/documentation/PacketProcessor/PacketProcessor":{"role":"symbol","title":"PacketProcessor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PacketProcessor"}],"abstract":[{"type":"text","text":"Provides a simple, type-safe way of handling structured packets given a data stream."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketProcessor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PacketProcessor"}],"url":"\/documentation\/packetprocessor\/packetprocessor"},"doc://PacketProcessor/documentation/PacketProcessor/AnyPacket":{"role":"symbol","title":"AnyPacket","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyPacket"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"Packet"},{"type":"text","text":"."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/AnyPacket","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyPacket"}],"url":"\/documentation\/packetprocessor\/anypacket"},"doc://PacketProcessor/tutorials/Tutorial-TOC":{"role":"overview","title":"Examples Packets","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor"},{"type":"text","text":" can help you to easily convert a stream of characters to structured data packets."}],"identifier":"doc:\/\/PacketProcessor\/tutorials\/Tutorial-TOC","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-toc"},"doc://PacketProcessor/documentation/PacketProcessor/PacketHandlerIdentifier":{"role":"symbol","title":"PacketHandlerIdentifier","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PacketHandlerIdentifier"}],"abstract":[],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketHandlerIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PacketHandlerIdentifier"}],"url":"\/documentation\/packetprocessor\/packethandleridentifier"},"doc://PacketProcessor/documentation/PacketProcessor/StringPacket":{"role":"symbol","title":"StringPacket","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringPacket"}],"abstract":[{"type":"text","text":"String-oriented packets should conform to "},{"type":"codeVoice","code":"StringPacket"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Examples include SMTP, IRC, XMPP."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/StringPacket","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringPacket"}],"url":"\/documentation\/packetprocessor\/stringpacket"},"doc://PacketProcessor/documentation/PacketProcessor/PacketHandlerContext":{"role":"symbol","title":"PacketHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PacketHandlerContext"}],"abstract":[{"type":"text","text":"Used by packet handlers to get more details about the state of the data stream.  Typically used in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/Packet\/findFirstPacket(context:data:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/PacketProcessor\/documentation\/PacketProcessor\/PacketHandlerContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PacketHandlerContext"}],"url":"\/documentation\/packetprocessor\/packethandlercontext"}}}